{"version":3,"file":"static/js/416.672dd7d2.chunk.js","mappings":"0MAEO,MAAMA,GAAqBC,EAAAA,EAAAA,IAAO,UAAU;;;;;;;;;;EAYtCC,GAAUD,EAAAA,EAAAA,IAAO,IAAI;;EAIrBE,GAAiBF,EAAAA,EAAAA,IAAO,MAAM;;;;eCD3C,MA4BA,GAAeG,EAAAA,EAAAA,IAAf,EA5BoBC,IAAoG,IAAnG,MAAEC,EAAK,QAAEC,EAAO,eAAEC,EAAiB,KAAI,OAAEC,EAAM,aAAEC,EAAY,IAAEC,EAAG,GAAEC,EAAE,EAAEC,GAAqBR,EAOhH,OACES,EAAAA,EAAAA,KAACd,EAAkB,CAAAe,UACjBD,EAAAA,EAAAA,KAACE,EAAAA,GAAK,CAACC,UAAWT,EAAeO,UAC/BD,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,QAAQ,SAASC,MAAM,SAASR,GAAIA,EAAGG,UAC1CD,EAAAA,EAAAA,KAACX,EAAc,CAAAY,UACbM,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGX,SAAA,EAClCD,EAAAA,EAAAA,KAAA,MAAAC,SAAKF,EAAEP,MACPQ,EAAAA,EAAAA,KAACZ,EAAO,CAAAa,SAAEF,EAAEN,KACXE,GAAUE,IACTG,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,KAAK,SAASC,QAASA,IAAMnB,EAfjCE,KACAkB,SAASC,eAAenB,GAChCoB,eAAe,CACrBC,SAAU,UACV,EAW8DC,CAASvB,GAAOwB,OAAOC,SAASC,KAAO1B,EAAII,SAC5FF,EAAEJ,eAOI,G","sources":["components/MiddleBlock/styles.tsx","components/MiddleBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const MiddleBlockSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 7.5rem 0 3rem;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    padding: 5.5rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  padding: 0.75rem 0 0.75rem;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  @media only screen and (max-width: 768px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Slide } from \"react-awesome-reveal\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { MiddleBlockSection, Content, ContentWrapper } from \"./styles\";\r\n\r\ninterface MiddleBlockProps {\r\n  title: string;\r\n  content: string;\r\n  slideDirection?: \"up\" | \"down\"\r\n  button: string | undefined;\r\n  shouldScroll?: boolean | undefined;\r\n  url?: string | undefined;\r\n  t: any;\r\n  id?: string;\r\n}\r\n\r\nconst MiddleBlock = ({ title, content, slideDirection = \"up\", button, shouldScroll, url, id, t }: MiddleBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <MiddleBlockSection>\r\n      <Slide direction={slideDirection}>\r\n        <Row justify=\"center\" align=\"middle\" id={id}>\r\n          <ContentWrapper>\r\n            <Col lg={24} md={24} sm={24} xs={24}>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              {button && url && (\r\n                <Button name=\"submit\" onClick={() => shouldScroll ? scrollTo(url) : window.location.href = url}>\r\n                  {t(button)}\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </ContentWrapper>\r\n        </Row>\r\n      </Slide>\r\n    </MiddleBlockSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(MiddleBlock);\r\n"],"names":["MiddleBlockSection","styled","Content","ContentWrapper","withTranslation","_ref","title","content","slideDirection","button","shouldScroll","url","id","t","_jsx","children","Slide","direction","Row","justify","align","_jsxs","Col","lg","md","sm","xs","Button","name","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","window","location","href"],"sourceRoot":""}